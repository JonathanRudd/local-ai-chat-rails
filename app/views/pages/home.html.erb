

  <div class="wrapper">
    <h2>GREETINGS</h2>
    <p></p>
    <ul class="messages">
      <li>Thinking...</li>
    </ul>
    <form class="add-items">
      <input type="text" name="item" placeholder="Comment here" required>
      <input type="submit" value="Ask">
    </form>
  </div>


<script>
  const addItems = document.querySelector('.add-items');
  const itemsList = document.querySelector('.messages');

  const items = JSON.parse(localStorage.getItem('items')) || [];


  function addItem(e) {
    e.preventDefault();
    const input = document.querySelector('input[name="item"]');
    const text = input.value;

    const item = { "role": "user", "content"  : text }; // create object with text property
    items.push(item); // add item to items array
    populateList(items, itemsList); // update display of list
    localStorage.setItem('items', JSON.stringify(items)); // store updated list in local storage
    this.reset(); // reset form

  }

  function populateList(messages = [], messagesList) {
    messagesList.innerHTML = messages.map((message, i) => {
      return `
        <li>
          <label for="item${i}">${message.content}</label>
        </li>
      `;
    }).join('');
  }

  addItems.addEventListener('submit', addItem);

  populateList(items, itemsList);
</script>

<%  convoArray = [{ "role": "user", "content": "Greetings Potion Seller" }, { "role": "assistant",
  "content": "Welcome, adventurer. I am the potion seller, purveyor of the finest elixirs in all the land. What
  brings you to my humble shop today?" }, { "role": "user",
  "content": "I am in need of a potion of healing"}, { "role": "assistant",
  "content": "Ah, a wise choice indeed. A potion of healing can be the difference between life and death on any perilous journey. I have just the thing for you. This potion is brewed from the purest ingredients, and has the power to mend even the gravest of wounds. However, I must warn you, it does not come cheaply. Are you willing to pay the price?"}, { "role": "user",
  "content": "I am willing to pay the price"}]
%>



<% gptCall = GptApi.new %>

<%= gptCall.fetch_gpt(convoArray) %>
